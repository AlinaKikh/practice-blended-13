{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\n\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      window.alert('Please choose a date in the future');\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDiff = userSelectedDate - currentTime;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerInterval);\n      input.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(timeDiff);\n  }, 1000);\n});\n\nfunction updateTimerDisplay(ms) {\n  const time = convertMs(ms);\n  daysSpan.textContent = addLeadingZero(time.days);\n  hoursSpan.textContent = addLeadingZero(time.hours);\n  minutesSpan.textContent = addLeadingZero(time.minutes);\n  secondsSpan.textContent = addLeadingZero(time.seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nconsole.log(convertMs(2000));\nconsole.log(convertMs(140000));\nconsole.log(convertMs(24140000));\n"],"names":["startBtn","input","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","timerInterval","options","selectedDates","selectedDate","flatpickr","timeDiff","updateTimerDisplay","ms","time","convertMs","addLeadingZero","days","hours","minutes","seconds","value"],"mappings":"oGAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAAgB,KAEpBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,OAAO,MAAM,oCAAoC,EACjDV,EAAS,SAAW,KAEpBM,EAAmBI,EACnBV,EAAS,SAAW,GAEvB,CACH,EAEAW,EAAUV,EAAOO,CAAO,EAExBR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBM,EAAgB,YAAY,IAAM,CAEhC,MAAMK,EAAWN,EADG,IAAI,KAGxB,GAAIM,GAAY,EAAG,CACjB,cAAcL,CAAa,EAC3BN,EAAM,SAAW,GACjB,MACD,CAEDY,EAAmBD,CAAQ,CAC5B,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAmBC,EAAI,CAC9B,MAAMC,EAAOC,EAAUF,CAAE,EACzBZ,EAAS,YAAce,EAAeF,EAAK,IAAI,EAC/CZ,EAAU,YAAcc,EAAeF,EAAK,KAAK,EACjDX,EAAY,YAAca,EAAeF,EAAK,OAAO,EACrDV,EAAY,YAAcY,EAAeF,EAAK,OAAO,CACvD,CAEA,SAASC,EAAUF,EAAI,CAMrB,MAAMI,EAAO,KAAK,MAAMJ,EAAK,KAAG,EAC1BK,EAAQ,KAAK,MAAOL,EAAK,MAAO,IAAI,EACpCM,EAAU,KAAK,MAAON,EAAK,KAAQ,GAAM,EACzCO,EAAU,KAAK,MAAOP,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASJ,EAAeK,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,QAAQ,IAAIN,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}